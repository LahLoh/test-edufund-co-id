// Code generated by mockery v2.14.0. DO NOT EDIT.

package mock

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Token is an autogenerated mock type for the Token type
type Token struct {
	mock.Mock
}

// Sign provides a mock function with given fields: exp, data
func (_m *Token) Sign(exp time.Time, data interface{}) (string, error) {
	ret := _m.Called(exp, data)

	var r0 string
	if rf, ok := ret.Get(0).(func(time.Time, interface{}) string); ok {
		r0 = rf(exp, data)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(time.Time, interface{}) error); ok {
		r1 = rf(exp, data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewToken interface {
	mock.TestingT
	Cleanup(func())
}

// NewToken creates a new instance of Token. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewToken(t mockConstructorTestingTNewToken) *Token {
	mock := &Token{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
